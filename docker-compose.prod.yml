version: "3"
services:
  #DB
  postgres:
    build: ./backend/postgres
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: book_list
    ports:
      - 5432:5432
    networks:
      - app-tier
    restart: always

  # model server
  modelserver:
    build:
      context: ./backend/modelserver
      dockerfile: Dockerfile
    command: gunicorn -w 1 -b 0.0.0.0:7000 wsgi:app
    ports:
      - "7000:7000"
    environment:
      - APP_SETTINGS=config.DevelopmentConfig
      - SECRET_KEY=dockertest
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/db_dev
    volumes:
      - ./backend/modelserver/:/modelserver/
    depends_on:
      - postgres
      - elasticsearch
    links:
      - postgres
    networks:
      - app-tier
    restart: always

  # backend
  backend:
    build:
      context: ./backend/apiserver
      dockerfile: Dockerfile
    command: gunicorn -b 0.0.0.0:5000 -w 3 -t 240 wsgi:app
    ports:
      - "5000:5000"
    environment:
      - APP_SETTINGS=config.DevelopmentConfig
      - SECRET_KEY=dockertest
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/book_list
    volumes:
      - ./backend/apiserver:/apiserver
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - app-tier
    restart: always

  # frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        API_URL: "*"
    volumes:
      - ./frontend/:/frontend
      - build_folder:/frontend/build
      - ./frontend/node_modules/:/frontend/node_modules
    networks:
      - app-tier
    tty: true

  # elasticsearch
  elasticsearch:
    build: ./backend/elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app-tier
    volumes:
      - ./backend/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - "cluster.name=elasticsearch"
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - "XPACK_SECURITY_ENABLED=false"
    healthcheck:
      test: "curl http://elasticsearch:9200"
      interval: "1s"
      timeout: "3s"
      retries: 60
    ulimits:
      memlock:
        soft: -1
        hard: -1


  #kibana
  kibana:
    container_name: kibana
    image: kibana:7.9.0
    ports:
      - 5601:5601
    networks:
      - app-tier
    environment:
      ELASTICSERCH_UTL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    environment:
      - TZ=Asia/Seoul
    restart: always
    depends_on:
      - elasticsearch


  nginx:
    build: ./nginx
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - build_folder:/var/www/frontend
    depends_on:
      - frontend
      - backend
      - modelserver
    restart: "on-failure"
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  postgres_data:
  build_folder:
